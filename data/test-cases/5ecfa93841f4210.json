{
  "uid" : "5ecfa93841f4210",
  "name" : "delete db",
  "fullName" : "test_first.TestPOST#test_delete_db",
  "historyId" : "f2f3cba4290fc70b0b6b7aaf6737862e",
  "time" : {
    "start" : 1703359538480,
    "stop" : 1703359539176,
    "duration" : 696
  },
  "status" : "skipped",
  "statusMessage" : "XFAIL\n\nAssertionError: Incorrect status code",
  "statusTrace" : "self = <test_first.TestPOST object at 0x7f6d27b36290>\n\n    @allure.sub_suite('DELETE')\n    @allure.title('delete db')\n    @pytest.mark.xfail()\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(DataMySql.sid)\n        json_list_db = json.loads(list_db.text)\n        first_db_uuid = list(json_list_db['content'].keys())[0]\n        result_post_db_list = API.delete_db(first_db_uuid, DataMySql.sid)\n>       Checking.check_status_code(result_post_db_list, 200)\n\ntest_first.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "skipped",
    "statusMessage" : "XFAIL\n\nAssertionError: Incorrect status code",
    "statusTrace" : "self = <test_first.TestPOST object at 0x7f6d27b36290>\n\n    @allure.sub_suite('DELETE')\n    @allure.title('delete db')\n    @pytest.mark.xfail()\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(DataMySql.sid)\n        json_list_db = json.loads(list_db.text)\n        first_db_uuid = list(json_list_db['content'].keys())[0]\n        result_post_db_list = API.delete_db(first_db_uuid, DataMySql.sid)\n>       Checking.check_status_code(result_post_db_list, 200)\n\ntest_first.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError",
    "steps" : [ {
      "name" : "Method POST",
      "time" : {
        "start" : 1703359538481,
        "stop" : 1703359538832,
        "duration" : 351
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Add request",
        "time" : {
          "start" : 1703359538481,
          "stop" : 1703359538481,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "url",
          "value" : "'https://dbend.areso.pro/db_list'"
        }, {
          "name" : "method",
          "value" : "'POST'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      }, {
        "name" : "Add response",
        "time" : {
          "start" : 1703359538831,
          "stop" : 1703359538832,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response code: 200\n",
          "time" : {
            "start" : 1703359538831,
            "stop" : 1703359538831,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        }, {
          "name" : "Response text: {\"content\":{\"06587343-1b9e-7fa1-8000-71f7b2674300\":[\"\",\"CIS\",\"db_creating\",null,null]}}\n\n",
          "time" : {
            "start" : 1703359538832,
            "stop" : 1703359538832,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "result",
          "value" : "<Response [200]>"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'https://dbend.areso.pro/db_list'"
      }, {
        "name" : "body",
        "value" : "{}"
      }, {
        "name" : "cookie",
        "value" : "{'sid': 'f9a28cc9-6632-4974-a337-271e9439cc95'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 4,
      "hasContent" : true
    }, {
      "name" : "Method POST",
      "time" : {
        "start" : 1703359538832,
        "stop" : 1703359539176,
        "duration" : 344
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Add request",
        "time" : {
          "start" : 1703359538832,
          "stop" : 1703359538833,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "url",
          "value" : "'https://dbend.areso.pro/db_delete'"
        }, {
          "name" : "method",
          "value" : "'POST'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      }, {
        "name" : "Add response",
        "time" : {
          "start" : 1703359539176,
          "stop" : 1703359539176,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "Response code: 400\n",
          "time" : {
            "start" : 1703359539176,
            "stop" : 1703359539176,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        }, {
          "name" : "Response text: {\"content\":\"msg[18]: error: can't delete a db while it's creating\"}\n\n",
          "time" : {
            "start" : 1703359539176,
            "stop" : 1703359539176,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ ],
          "parameters" : [ ],
          "attachmentsCount" : 0,
          "shouldDisplayMessage" : false,
          "stepsCount" : 0,
          "hasContent" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "result",
          "value" : "<Response [400]>"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 2,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'https://dbend.areso.pro/db_delete'"
      }, {
        "name" : "db_uuid",
        "value" : "'{\"db_uuid\": \"06587343-1b9e-7fa1-8000-71f7b2674300\"}'"
      }, {
        "name" : "sid",
        "value" : "{'sid': 'f9a28cc9-6632-4974-a337-271e9439cc95'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 4,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "20ba20d0a29dc229",
      "name" : "stdout",
      "source" : "20ba20d0a29dc229.txt",
      "type" : "text/plain",
      "size" : 304
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 10,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "subSuite",
    "value" : "DELETE"
  }, {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "suite",
    "value" : "REQUESTS POST"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.xfail"
  }, {
    "name" : "host",
    "value" : "fv-az1542-577"
  }, {
    "name" : "thread",
    "value" : "1889-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_first"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 3,
        "broken" : 3,
        "skipped" : 6,
        "passed" : 1,
        "unknown" : 0,
        "total" : 13
      },
      "items" : [ {
        "uid" : "b353ec7122ed42b7",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1703244845879,
          "stop" : 1703244846264,
          "duration" : 385
        }
      }, {
        "uid" : "53af9f5911ced1e8",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1703188735841,
          "stop" : 1703188736397,
          "duration" : 556
        }
      }, {
        "uid" : "eb9e6f40cfb2221",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1703188195976,
          "stop" : 1703188196370,
          "duration" : 394
        }
      }, {
        "uid" : "1bc3af4fa83ac4fb",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1703187110759,
          "stop" : 1703187111102,
          "duration" : 343
        }
      }, {
        "uid" : "67a930e9d09a07de",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nIndexError: list index out of range",
        "time" : {
          "start" : 1703186750451,
          "stop" : 1703186750848,
          "duration" : 397
        }
      }, {
        "uid" : "1d1280d9eadd61d3",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1703084234185,
          "stop" : 1703084234534,
          "duration" : 349
        }
      }, {
        "uid" : "a766bfb284bcd36a",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1703083504066,
          "stop" : 1703083504407,
          "duration" : 341
        }
      }, {
        "uid" : "3cfa467a1b2ba76b",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code",
        "time" : {
          "start" : 1702505148254,
          "stop" : 1702505148947,
          "duration" : 693
        }
      }, {
        "uid" : "4717809aa5b771f1",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code",
        "time" : {
          "start" : 1702328881915,
          "stop" : 1702328882965,
          "duration" : 1050
        }
      }, {
        "uid" : "145e74b19aad7de8",
        "status" : "broken",
        "statusDetails" : "IndexError: list index out of range",
        "time" : {
          "start" : 1701728823984,
          "stop" : 1701728824519,
          "duration" : 535
        }
      }, {
        "uid" : "c21f1e540c907cae",
        "status" : "failed",
        "statusDetails" : "AssertionError: Incorrect status code",
        "time" : {
          "start" : 1701725997327,
          "stop" : 1701725998038,
          "duration" : 711
        }
      }, {
        "uid" : "3b0161a653171cf3",
        "status" : "passed",
        "time" : {
          "start" : 1700766861218,
          "stop" : 1700766861596,
          "duration" : 378
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail" ]
  },
  "source" : "5ecfa93841f4210.json",
  "parameterValues" : [ ]
}