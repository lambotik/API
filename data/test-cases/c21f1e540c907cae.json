{
  "uid" : "c21f1e540c907cae",
  "name" : "delete db",
  "fullName" : "test_first.TestPOST#test_delete_db",
  "historyId" : "f2f3cba4290fc70b0b6b7aaf6737862e",
  "time" : {
    "start" : 1701725997327,
    "stop" : 1701725998038,
    "duration" : 711
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Incorrect status code",
  "statusTrace" : "self = <test_first.TestPOST object at 0x7f91ca39c610>\n\n    @allure.sub_suite('DELETE')\n    @allure.title('delete db')\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(sid)\n        json_list_db = json.loads(list_db.text)\n        first_db_uuid = list(json_list_db['content'].keys())[0]\n        result_post_db_list = API.delete_db(first_db_uuid, sid)\n>       Checking.check_status_code(result_post_db_list, 200)\n\ntest_first.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Incorrect status code",
    "statusTrace" : "self = <test_first.TestPOST object at 0x7f91ca39c610>\n\n    @allure.sub_suite('DELETE')\n    @allure.title('delete db')\n    def test_delete_db(self):\n        print('\\n\\nMethod DELETE: delete_db')\n        list_db = API.post_db_list(sid)\n        json_list_db = json.loads(list_db.text)\n        first_db_uuid = list(json_list_db['content'].keys())[0]\n        result_post_db_list = API.delete_db(first_db_uuid, sid)\n>       Checking.check_status_code(result_post_db_list, 200)\n\ntest_first.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = <Response [400]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(result: requests.models.Response, status_code: int):\n        \"\"\"\n        Method check status code\n        :param result: Response JSON\n        :param status_code:\n        :return: int\n        \"\"\"\n>       assert status_code == result.status_code, 'Incorrect status code'\nE       AssertionError: Incorrect status code\n\nutils/checking.py:17: AssertionError",
    "steps" : [ {
      "name" : "Method POST",
      "time" : {
        "start" : 1701725997327,
        "stop" : 1701725997671,
        "duration" : 344
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Add request",
        "time" : {
          "start" : 1701725997327,
          "stop" : 1701725997327,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "url",
          "value" : "'https://dbend.areso.pro/db_list'"
        }, {
          "name" : "method",
          "value" : "'POST'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      }, {
        "name" : "Add response",
        "time" : {
          "start" : 1701725997671,
          "stop" : 1701725997671,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "result",
          "value" : "<Response [200]>"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'https://dbend.areso.pro/db_list'"
      }, {
        "name" : "body",
        "value" : "{}"
      }, {
        "name" : "cookie",
        "value" : "{'sid': '9fefbb8e-e985-46d5-9cc0-462a29b53691'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 2,
      "hasContent" : true
    }, {
      "name" : "Body: {\"content\":{\"0656e472-ce07-7de6-8000-e5ea91ab3141\":[\"\",\"CIS\",\"db_creating\",null,null]}}\n",
      "time" : {
        "start" : 1701725997671,
        "stop" : 1701725997671,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Method POST",
      "time" : {
        "start" : 1701725997671,
        "stop" : 1701725998038,
        "duration" : 367
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Add request",
        "time" : {
          "start" : 1701725997672,
          "stop" : 1701725997673,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "url",
          "value" : "'https://dbend.areso.pro/db_delete'"
        }, {
          "name" : "method",
          "value" : "'POST'"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      }, {
        "name" : "Add response",
        "time" : {
          "start" : 1701725998038,
          "stop" : 1701725998038,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ {
          "name" : "result",
          "value" : "<Response [400]>"
        } ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "url",
        "value" : "'https://dbend.areso.pro/db_delete'"
      }, {
        "name" : "db_uuid",
        "value" : "'{\"db_uuid\": \"0656e472-ce07-7de6-8000-e5ea91ab3141\"}'"
      }, {
        "name" : "sid",
        "value" : "{'sid': '9fefbb8e-e985-46d5-9cc0-462a29b53691'}"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 2,
      "hasContent" : true
    }, {
      "name" : "Response body: {\"content\":\"msg[18]: error: can't delete a db while it's creating\"}\n",
      "time" : {
        "start" : 1701725998038,
        "stop" : 1701725998038,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "cb224b4973b3b21f",
      "name" : "stdout",
      "source" : "cb224b4973b3b21f.txt",
      "type" : "text/plain",
      "size" : 304
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 8,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "epic",
    "value" : "POST REQUESTS"
  }, {
    "name" : "subSuite",
    "value" : "DELETE"
  }, {
    "name" : "suite",
    "value" : "REQUESTS POST"
  }, {
    "name" : "host",
    "value" : "fv-az736-612"
  }, {
    "name" : "thread",
    "value" : "2078-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_first"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "3b0161a653171cf3",
        "status" : "passed",
        "time" : {
          "start" : 1700766861218,
          "stop" : 1700766861596,
          "duration" : 378
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c21f1e540c907cae.json",
  "parameterValues" : [ ]
}